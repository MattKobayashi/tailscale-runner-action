---
name: 'Tailscale Runner Action'
description: 'Start an ephemeral GitHub Actions runner in a Docker container via Tailscale'
branding:
  icon: 'terminal'
  color: 'purple'
inputs:
  gh-app-id:
    description: 'The app ID for your GitHub App.'
    required: true
  gh-app-login:
    description: 'The login name for your GitHub App.'
    required: true
  gh-app-private-key:
    description: 'The private key for your GitHub App.'
    required: true
  runner-labels:
    default: 'linux,x64'
    description: 'Labels to be added to the runner.'
    required: false
  runner-network:
    default: 'bridge'
    description: 'The name of a custom Docker network to attach the runner to.'
    required: false
  runner-working-dir:
    default: '/tmp/actions-runners'
    description: 'A path on the host for the runner working directory.'
    required: false
  ssh-host:
    description: 'The Tailscale hostname or Tailscale IP address of your Docker host.'
    required: true
  ssh-user:
    description: 'The SSH username to use when logging into your Docker host.'
    required: true
  ts-oauth-client-id:
    description: 'Your Tailscale OAuth Client ID.'
    required: true
  ts-oauth-secret:
    description: 'Your Tailscale OAuth Client Secret.'
    required: true
  ts-tag:
    default: 'github-actions'
    description: 'A unique tag to apply to ephemeral Tailscale nodes.'
    required: false
  ts-version:
    default: '1.74.1'
    description: 'The Tailscale client version to use.'
    required: false
runs:
  using: "composite"
  steps:
    - name: Create ephemeral Tailscale node
      id: create-ts-node
      uses: tailscale/github-action@v2
      with:
        oauth-client-id: ${{ inputs.ts-oauth-client-id }}
        oauth-secret: ${{ inputs.ts-oauth-secret }}
        tags: tag:${{ inputs.ts-tag }}
        version: ${{ inputs.ts-version }}
    - name: Run `ssh-keyscan`
      id: ssh-keyscan
      run: |
        set -ex
        mkdir ~/.ssh
        chmod 700 ~/.ssh
        ssh-keyscan ${{ inputs.ssh-host }} >> ~/.ssh/known_hosts
      shell: bash
    - name: Start ephemeral runner container
      id: start-runner
      run: |
        set -ex
        WORKDIR=${{ inputs.runner-working-dir }}/$(uuidgen)
        ssh ${{ inputs.ssh-user }}@${{ inputs.ssh-host }} docker container run \
          --cgroupns=private \
          --cgroup-parent=/actions-runners \
          --detach \
          --env=APP_ID=${{ inputs.gh-app-id }} \
          --env=APP_LOGIN=${{ inputs.gh-app-login }} \
          '--env=APP_PRIVATE_KEY="${{ inputs.gh-app-private-key }}"' \
          --env=EPHEMERAL=true \
          --env=LABELS=${{ inputs.runner-labels }} \
          --env=REPO_URL=${{ github.server_url }}/${{ github.repository }} \
          --env=RUNNER_WORKDIR=$WORKDIR/work \
          --network=${{ inputs.runner-network }} \
          --restart=no \
          --rm \
          --security-opt=label=disable \
          --stop-signal=SIGTERM \
          --stop-timeout=30 \
          --volume /var/run/docker.sock:/var/run/docker.sock \
          --volume $WORKDIR:$WORKDIR \
            ghcr.io/myoung34/docker-github-actions-runner:2.320.0-debian-bookworm
      shell: bash
